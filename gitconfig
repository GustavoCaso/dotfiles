[includeIf "gitdir:~/src/github.com/GustavoCaso/"]
  path = ~/.gitconfig-personal
[includeIf "gitdir:~/src/github.com/Shopify/"]
  path = ~/.gitconfig-work
[core]
  excludesfile = ~/.gitignore_global
  editor = "vim"
	commitGraph = true
[alias]
  current = rev-parse --abbrev-ref HEAD
  clear   = checkout .
  tree    = log --graph --decorate --oneline --abbrev-commit
  lol     = log --pretty=format:'%h %s - %an, %ar ' --abbrev-commit --graph --decorate -n10
  s       = status
  c       = checkout
  pll     = "!f() { local current_branch=$(git current); git pull origin ${current_branch}; }; f"
  ppf     = "!f() { local current_branch=$(git current); git push origin ${current_branch} -f; }; f"
  pp      = "!f() { local current_branch=$(git current); git push origin ${current_branch}; }; f"
  aa      = add .
  bclean  = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs git branch -d; }; f"
  bprune  = ! git remote prune origin && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D
  dsf     = "! git diff --color $@ | diff-so-fancy"
  pullf   = "!f() { git fetch origin pull/$1/head:$2 && git checkout $2; }; f"
  nc      = diff --staged
  empty   = commit --allow-empty
  amend   = commit --amend
  cmds    = "!f() { git alias | fzf | awk '{print $1}' | xargs git; }; f"
  bch     = "!f() { git branch | fzf | xargs git checkout; }; f"
  bdel    = "!f() { git branch | fzf | xargs git branch -d; }; f"
  bdell    = "!f() { git branch | fzf | xargs git branch -D; }; f"
  pmr     = "!f() { local current_branch=$(git current); git checkout master ; git pull origin master ; git checkout ${current_branch}; git rebase master; }; f"
  master  = ! git checkout master && git pull origin master && git bclean
  fbranch = "!f() { git fetch origin $1 && git checkout --track origin/$1; }; f"
	alias   = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
[push]
  default = current
[pull]
  default = current
[commit]
  template = ~/.gitmessage
  cleanup = strip
[rebase]
  autosquash = true
[init]
  templatedir = ~/.git-templates
[diff]
	algorithm = patience
[protocol]
	version = 2
[gc]
	writeCommitGraph = true
